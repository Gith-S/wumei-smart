; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32dev]
platform = espressif32 @ ~5.2                       ;建议采用5.2，最新版本的编译通不过。
;board = adafruit_feather_esp32s3
board = esp32dev
framework = arduino

;build_flags = -DCORE_DEBUG_LEVEL=5 -Wno-unused-function -Wno-unused-variable -std=gnu++11 -DHW_ESP32 -DBUFFER_SIZE=32 -DDEBUG -DTIMER_DEBUG

;board = esp-wrover-kit  
;build_flags = -DCORE_DEBUG_LEVEL=5  -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue   
;build_flags =-DCORE_DEBUG_LEVEL=5 -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -Wno-unused-function -Wno-unused-variable -std=gnu++11 -DHW_ESP32 -DBUFFER_SIZE=32 -DDEBUG -DTIMER_DEBUG

upload_port=COM7
monitor_port=COM7
monitor_speed = 115200
upload_speed = 921600

monitor_filters = esp32_exception_decoder      ;可以过滤或打印错误信息到串口调试助手
build_type = debug

board_build.f_cpu = 240000000L
board_build.flash_freq=80M
board_build.flash_mode = qio
board_build.bootloader = dio

;board_build.flash_size=4MB
;board_build.spiram_mode=2
;board_upload.maximum_size = 3145728
;board_upload.flash_size = 4MB

;[env:custom_table]
; 查看如下链接：https://github.com/espressif/arduino-esp32/tree/master/tools/partitions
;board_build.partitions = huge_app.csv        ;3M No OTA 1MB SPIFFS
board_build.partitions =min_spiffs.csv        ;1.9M with OTA 190K SPIFFS，这里分区表里面的spiffs可切换为LittleFS，所以不用管
;board_build.partitions =myPartition.csv      ;fatfs
;board_build.partitions =no_ota.csv

board_build.filesystem = littlefs             ;使用LittleFS的正确方法

lib_ignore = 
    LittleFS_esp32

lib_deps =
    HTTPClient    ;和公司平台连接的时候如果用arduinohttpclient或wificlient有错误，主要是有前缀或后缀，换这个没问题    
    ArduinoJson
    knolleary/PubSubClient@2.8
    OneButton
    Ethernet
    